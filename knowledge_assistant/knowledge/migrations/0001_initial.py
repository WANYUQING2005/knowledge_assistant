# Generated by Django 5.2.6 on 2025-09-09 06:23

import django.db.models.deletion
import knowledge.models.knowledge_base_models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('knowledge_base_id', models.CharField(max_length=36)),
                ('title', models.CharField(max_length=200)),
                ('file_type', models.CharField(max_length=40)),
                ('storage_uri', models.CharField(max_length=255)),
                ('chunk_count', models.IntegerField(default=0)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('creater_id', models.CharField(max_length=36)),
                ('file_size', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.CharField(default=knowledge.models.knowledge_base_models.generate_knowledge_id, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('owner_user_id', models.CharField(max_length=36)),
                ('name', models.CharField(default='我的知识库', max_length=100)),
                ('description', models.TextField(default='')),
                ('embed_model', models.CharField(default='0', max_length=80)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('storage_size', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Markdown',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('title', models.TextField(default='[]')),
                ('content', models.CharField(max_length=350)),
                ('vector_id', models.CharField(blank=True, max_length=36, null=True)),
                ('number', models.IntegerField()),
                ('word_count', models.IntegerField()),
                ('document_id', models.CharField(max_length=36)),
                ('kb_id', models.CharField(default='0', max_length=36)),
                ('creater_id', models.CharField(max_length=36)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RagDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('title', models.CharField(max_length=512)),
                ('source_type', models.CharField(max_length=64, null=True)),
                ('tags', models.JSONField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RagChunks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ord', models.IntegerField()),
                ('content', models.CharField(max_length=350)),
                ('content_hash', models.CharField(max_length=64, unique=True)),
                ('split', models.CharField(max_length=16)),
                ('metadata', models.JSONField(null=True)),
                ('chunk_tags', models.JSONField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tag0', models.CharField(max_length=64, null=True)),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='knowledge.ragdocuments')),
            ],
            options={
                'indexes': [models.Index(fields=['doc', 'ord'], name='knowledge_r_doc_id_fc263b_idx'), models.Index(fields=['tag0'], name='knowledge_r_tag0_b3cf89_idx')],
            },
        ),
    ]
